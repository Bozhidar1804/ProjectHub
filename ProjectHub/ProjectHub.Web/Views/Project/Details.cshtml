@model ProjectDetailsViewModel

@{
    int totalTasks = Model.Tasks.Count;
    int completedTasks = Model.Tasks.Count(t => t.IsCompleted);

    // Calculate progress percentage
    double projectProgress = totalTasks > 0 ? (double)completedTasks / totalTasks * 100 : 0;
}

<div class="container mt-5">
    <!-- Project Header -->
    <div class="text-center mb-5">
        <h2 class="display-4 text-primary fw-bold">@Model.Name - Details</h2>
        <p class="lead text-muted">@Model.Description</p>
    </div>

    @if (Model.Milestones.Any() && Model.Tasks.Any()) 
    {
        <!-- Project Progress Section -->
        <section class="mb-5">
            <h4 class="text-info fw-bold mb-4">
                <i class="bi bi-flag-fill"></i> Project Progress
            </h4>

            <div class="progress mb-4 shadow-lg rounded-3" style="height: 50px; overflow: hidden;">
                <div class="progress-bar bg-gradient-primary progress-bar-striped progress-bar-animated"
                     role="progressbar"
                     style="width: @projectProgress%;"
                     aria-valuenow="@projectProgress"
                     aria-valuemin="0"
                     aria-valuemax="100">
                    <span class="text-dark fw-bold fs-5" style="position: absolute; width: 100%; text-align: center;">
                        @Math.Round(projectProgress, 2)% Completed
                    </span>
                </div>
            </div>
        </section>
    }

    <!-- Project Info Section -->
    <section class="mb-5">
        <h4 class="text-info fw-bold mb-4">Project Information</h4>
        <ul class="list-group shadow-sm rounded">
            <li class="list-group-item d-flex justify-content-between">
                <strong>Status:</strong> <span class="text-secondary">@Model.Status.GetDisplayName()</span>
            </li>
            <li class="list-group-item d-flex justify-content-between">
                <strong>Creator:</strong> <span class="text-secondary">@Model.CreatorName</span>
            </li>
            <li class="list-group-item d-flex justify-content-between">
                <strong>Team Members:</strong> <span class="text-secondary">@Model.TeamMemberCount</span>
            </li>
            <li class="list-group-item d-flex justify-content-between">
                <strong>Total Milestones:</strong> <span class="text-secondary">@Model.MaxMilestones</span>
            </li>
        </ul>
    </section>

    @if (Model.Members.Any())
    {
        <!-- Members Section -->
        <section class="mb-5">
            <h4 class="text-info fw-bold mb-4">Project Members</h4>
            <ul class="list-group shadow-sm rounded">
                @foreach (var member in Model.Members)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><strong>@member.UserName</strong></span>
                        <span class="badge bg-primary text-white">@member.Role</span>
                        <span class="badge bg-success text-white">@member.CompletedTasks Tasks Completed</span>
                    </li>
                }
            </ul>
        </section>
    }

    @{
        if (!Model.Members.Any(m => m.UserId == this.User.GetUserId()))
        {
            <div class="d-flex justify-content-center mt-4">
                <a asp-action="Create" asp-controller="Candidature" asp-route-projectId="@Model.ProjectId"
                   class="btn btn-success text-white fw-bold px-4 py-2 shadow-sm d-flex align-items-center justify-content-center"
                   style="border-radius: 25px; text-transform: uppercase; font-size: 1rem;">
                    <i class="bi bi-pencil-square me-2"></i> Apply
                </a>
            </div>
        }
    }

    @if (Model.Milestones.Any())
    {
        <!-- Milestones Section -->
        <section class="mb-5">
            <h4 class="text-info fw-bold mb-4">Project Milestones</h4>
            <ul class="list-group shadow-sm rounded">
                @foreach (var milestone in Model.Milestones)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><strong>@milestone.Name</strong></span>
                        <span class="badge bg-warning text-dark">Progress: @milestone.Progress%</span>
                        <span class="badge bg-info text-white">Deadline: @milestone.Deadline</span>
                    </li>
                }
            </ul>
        </section>
    }

    @if (Model.Tasks.Any())
    {
        <!-- Tasks Section -->
        <section class="mb-5">
            <h4 class="text-info fw-bold mb-4">Assigned Tasks</h4>
            <ul class="list-group shadow-sm rounded">
                @foreach (var task in Model.Tasks)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><strong>@task.Title</strong></span>
                        <span class="badge bg-primary text-white">@task.MilestoneName</span>
                        <span class="badge bg-secondary text-white">@task.Priority</span>
                        <span class="badge bg-success text-white">@task.AssignedTo</span>
                        <span class="badge @(task.IsCompleted ? "bg-success" : "bg-danger") text-white">
                            @(task.IsCompleted ? "Completed" : "Pending")
                        </span>
                    </li>
                }
            </ul>
        </section>
    }
</div>

